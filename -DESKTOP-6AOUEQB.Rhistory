sapply(students, typeof) %>%
kbl() %>%
kable_styling(position = "center",
bootstrap_options = "bordered",
row_label_position = "left",
latex_options = "scale_down")
mod <- lm(exam_score ~ ., data = select(students, -c(student_id)))
summary(mod)
par(mfrow=c(2,2))
plot(mod, which = 1:4)
#?plot.lm
ggplot(data = students, mapping = aes(x = study_hours_per_day,
y = exam_score,
color = gender,
shape = part_time_job,
))+
geom_point(alpha = .9)+
scale_color_brewer(palette = "Dark2") +
theme_classic() +
labs(title = "Relation Exam Score to Hrs of Study",
subtitle = "Categorized by Gender and Work Status",
x = "Hrs of Study by Day",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Part time Job"))
ggplot(data = students, mapping = aes(x = exercise_frequency,
y = exam_score,
#color = gender,
))+
geom_density_2d_filled () +
labs(title = "Relation Exam Score to Exercise Freqency",
#subtitle = "Categorized by Gender and Work Status",
x = "Excersice Frequency",
y = "Exam Score") +
theme(plot.title.position = "plot")
#scale_color_brewer(palette = "Dark2")
ggplot(data = students, mapping = aes(x = social_media_hours,
y = exam_score,
color = gender,
shape = part_time_job))+
geom_count() +
labs(title = "Relation Exam Score to Social Media Hrs",
subtitle = "Categorized by Gender and Work Status",
x ="Social Media Hrs.",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Part time Job"))
#geom_count = guide_legend(title = "Size"))
#scale_color_brewer(palette = "Dark2")
ggplot(data = students, mapping = aes(x = mental_health_rating,
y = exam_score,
color = gender,
shape = part_time_job))+
geom_count(alpha = 0.5) +
labs(title = "Relation Exam Score to Mental Health Rating",
subtitle = "Categorized by Gender and Work Status",
x ="Mental Health Rating",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Part time Job"))
ggplot(data = students, mapping = aes(x = netflix_hours,
y = exam_score,
color = gender,
shape = parental_education_level))+
geom_count(alpha = 0.5) +
labs(title = "Relation Exam Score to Netflix Hrs.",
subtitle = "Categorized by Gender, Work Status \n Parental Education Level",
x ="Netflix Hrs",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Parental Education Level"))
ggplot(data = students, mapping = aes(x = sleep_hours,
y = exam_score,
color = gender,
shape = parental_education_level))+
geom_count(alpha = 0.5) +
labs(title = "Relation Exam Score to Sleep Hrs..",
subtitle = "Categorized by Gender, Work Status \n Parental Education Level",
x ="Sleep Hrs.",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Parental Education Level"))
ggplot(data = students, mapping = aes(x = attendance_percentage,
y = exam_score,
color = gender,
shape = parental_education_level))+
geom_count(alpha= 0.4) +
labs(title = "Relation Exam Score to Attendance %",
subtitle = "Categorized by Gender, Work Status, and \nParental Education Level",
x ="Attendance %",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Parental Education Level"))
students <- read.csv("../../dataviz_final_project/data/student_habits_performance.csv")
students <- read.csv("../../dataviz_final_project/data/student_habits_performance.csv")
str(students)
multi.hist(students[,sapply(students, is.numeric)])
summary(students[,sapply(students, is.numeric)]) %>%
kbl() %>%
kable_styling()
#library(Hmisc)
cor(students[,sapply(students, is.numeric)]) %>%
kbl() %>%
kable_styling(position = "center",
bootstrap_options = "bordered",
row_label_position = "left",
latex_options = "scale_down")
#(students[,sapply(students, is.numeric)]
corrplot(cor(students[,sapply(students, is.numeric)]))
sapply(students, typeof) %>%
kbl() %>%
kable_styling(position = "center",
bootstrap_options = "bordered",
row_label_position = "left",
latex_options = "scale_down")
mod <- lm(exam_score ~ ., data = select(students, -c(student_id)))
summary(mod)
par(mfrow=c(2,2))
plot(mod, which = 1:4)
#?plot.lm
ggplot(data = students, mapping = aes(x = study_hours_per_day,
y = exam_score,
color = gender,
shape = part_time_job,
))+
geom_point(alpha = .9)+
scale_color_brewer(palette = "Dark2") +
theme_classic() +
labs(title = "Relation Exam Score to Hrs of Study",
subtitle = "Categorized by Gender and Work Status",
x = "Hrs of Study by Day",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Part time Job"))
ggplot(data = students, mapping = aes(x = exercise_frequency,
y = exam_score,
#color = gender,
))+
geom_density_2d_filled () +
labs(title = "Relation Exam Score to Exercise Freqency",
#subtitle = "Categorized by Gender and Work Status",
x = "Excersice Frequency",
y = "Exam Score") +
theme(plot.title.position = "plot")
#scale_color_brewer(palette = "Dark2")
ggplot(data = students, mapping = aes(x = social_media_hours,
y = exam_score,
color = gender,
shape = part_time_job))+
geom_count() +
labs(title = "Relation Exam Score to Social Media Hrs",
subtitle = "Categorized by Gender and Work Status",
x ="Social Media Hrs.",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Part time Job"))
#geom_count = guide_legend(title = "Size"))
#scale_color_brewer(palette = "Dark2")
ggplot(data = students, mapping = aes(x = mental_health_rating,
y = exam_score,
color = gender,
shape = part_time_job))+
geom_count(alpha = 0.5) +
labs(title = "Relation Exam Score to Mental Health Rating",
subtitle = "Categorized by Gender and Work Status",
x ="Mental Health Rating",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Part time Job"))
ggplot(data = students, mapping = aes(x = netflix_hours,
y = exam_score,
color = gender,
shape = parental_education_level))+
geom_count(alpha = 0.5) +
labs(title = "Relation Exam Score to Netflix Hrs.",
subtitle = "Categorized by Gender, Work Status \n Parental Education Level",
x ="Netflix Hrs",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Parental Education Level"))
ggplot(data = students, mapping = aes(x = sleep_hours,
y = exam_score,
color = gender,
shape = parental_education_level))+
geom_count(alpha = 0.5) +
labs(title = "Relation Exam Score to Sleep Hrs..",
subtitle = "Categorized by Gender, Work Status \n Parental Education Level",
x ="Sleep Hrs.",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Parental Education Level"))
ggplot(data = students, mapping = aes(x = attendance_percentage,
y = exam_score,
color = gender,
shape = parental_education_level))+
geom_count(alpha= 0.4) +
labs(title = "Relation Exam Score to Attendance %",
subtitle = "Categorized by Gender, Work Status, and \nParental Education Level",
x ="Attendance %",
y = "Exam Score") +
theme(plot.title.position = "plot") +
guides(color = guide_legend(title = "Gender",),
shape = guide_legend(title ="Parental Education Level"))
houses <- read.csv("../../dataviz_final_project/data/california_housing.csv")
head(houses, 6)
getwd()
library(tidyverse)
library(socviz)
library(plyr)
library(psych)
library(ggplot2)
#library(ggpattern)
library(directlabels)
library(gapminder)
library(kableExtra)
library(corrplot)
library(tidyverse)
library(hrbrthemes)
getwd()
library(tidyverse)
library(socviz)
library(plyr)
library(psych)
library(ggplot2)
#library(ggpattern)
library(directlabels)
library(gapminder)
library(kableExtra)
library(corrplot)
library(tidyverse)
#library(hrbrthemes)
library(viridis)
library(forcats)
library(GGally)
library(sf)
library(gganimate)
library(gifski)
library(plotly)
library(broom)
houses <- read.csv("../../dataviz_final_project/data/california_housing.csv")
head(houses, 6)
str(houses)
summary(houses, na.rm = TRUE)
#define Min-Max normalization function
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
hist_data <- houses %>% select(-c(longitude, latitude, ocean_proximity))
multi.hist(  scale(hist_data[1:7]))
houses %>% group_by(ocean_proximity) %>%
tally() %>%
ggplot(mapping = aes(x = fct_reorder(ocean_proximity, n),
y = n,
fill = ocean_proximity)) +
scale_y_log10()+
geom_col()+
theme_classic() +
labs(title = "Distribution of Houses by Distance to the Ocean",
subtitle = "Numbers in scale log10",
x = '',
y = '')+
theme(plot.title.position = "plot",
legend.position = "none")
cor_house <- cor(houses[,sapply(houses, is.numeric)]) %>%
kbl() %>%
kable_styling(position = "center",
bootstrap_options = "bordered",
row_label_position = "left",
latex_options = "scale_down")
cor_house
ggpairs( select(houses, -c( ocean_proximity, total_bedrooms)))
colnames(houses)
cou_data <- map_data("county", region = "california")
base1 <- ggplot(data = cou_data, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(color = "black", fill = "white") +
coord_quickmap() +
theme_void()
spat_house <-  select(houses, c(longitude, latitude, median_house_value, ocean_proximity,  housing_median_age))
base2 <-  base1 +
geom_point(alpha = 0.4, data = spat_house, mapping = aes(x = longitude,
y = latitude,
group = housing_median_age,
color = median_house_value/1000,
shape = ocean_proximity))+
labs(title = "California Housing Market",
caption = "Source: California Housing Dataset") +
theme_minimal() +
theme(plot.title.position = "plot")+
guides(color = guide_legend(title = "Median Value 1K"),
shape = guide_legend(title = "Ocean Proximity"))
base2
ggplotly(base2)
animation <- base2 +
transition_time(housing_median_age)+
ggtitle('Median Age: {frame_time}: ',
subtitle = 'Frame{frame} of {nframes}')
age <- max(spat_house$housing_median_age) - min(spat_house$housing_median_age) + 1
animated_map<- animate(animation, nframes = age, fps = 2)
animated_map
enc_data <- model.matrix(~ocean_proximity, data = houses)
enc_data <- as.data.frame(list(houses, enc_data)) # joins datasets.
colnames(enc_data)
enc_data <- select(enc_data, -c("ocean_proximity", "X.Intercept."))
cor(enc_data)
model_houses <- lm(median_house_value ~ ., data = enc_data)
summary(model_houses)
mod_coef <- broom::tidy(model_houses, conf.int = TRUE) %>%
filter(term != "(Intercept)")
mod_coef
ggplot(data = mod_coef, mapping = aes(x = estimate,
y = fct_rev(term))) +
geom_pointrange(mapping = aes(xmin = conf.low,
xmax = conf.high),
color = "red",
size = 0.3) +
geom_vline(xintercept = 0,
color = "blue",
alpha = .5) +
theme_minimal() +
labs(title = "Linear Regression Visualization",
x="Estimate",
y ="")+
theme(plot.title.position = "plot")
houses <- read.csv("../../dataviz_final_project/data/california_housing.csv")
getwd()
library(tidyverse)
library(socviz)
library(plyr)
library(psych)
library(ggplot2)
#library(ggpattern)
library(directlabels)
library(gapminder)
library(kableExtra)
library(corrplot)
library(tidyverse)
library(hrbrthemes)
getwd()
library(tidyverse)
library(socviz)
library(plyr)
library(psych)
library(ggplot2)
#library(ggpattern)
library(directlabels)
library(gapminder)
library(kableExtra)
library(corrplot)
library(tidyverse)
#library(hrbrthemes)
library(viridis)
library(forcats)
library(GGally)
library(sf)
library(gganimate)
library(gifski)
library(plotly)
library(broom)
library(stargazer)
library(tinytex)
library(webshot2)
getwd()
library(tidyverse)
library(socviz)
library(plyr)
library(psych)
library(ggplot2)
#library(ggpattern)
library(directlabels)
library(gapminder)
library(kableExtra)
library(corrplot)
library(tidyverse)
#library(hrbrthemes)
library(viridis)
library(forcats)
library(GGally)
library(sf)
library(gganimate)
library(gifski)
library(plotly)
library(broom)
library(stargazer)
library(tinytex)
library(webshot2)
install.packages("webshot2")
getwd()
library(tidyverse)
library(socviz)
library(plyr)
library(psych)
library(ggplot2)
#library(ggpattern)
library(directlabels)
library(gapminder)
library(kableExtra)
library(corrplot)
library(tidyverse)
#library(hrbrthemes)
library(viridis)
library(forcats)
library(GGally)
library(sf)
library(gganimate)
library(gifski)
library(plotly)
library(broom)
library(stargazer)
library(tinytex)
#library(webshot2)
houses <- read.csv("../../dataviz_final_project/data/california_housing.csv")
head(houses, 6)
str(houses)
summary(houses, na.rm = TRUE)
#define Min-Max normalization function
min_max_norm <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
hist_data <- houses %>% select(-c(longitude, latitude, ocean_proximity))
multi.hist(  scale(hist_data[1:7]))
library(scales)
houses %>% group_by(ocean_proximity, median_house_value) %>%
tally() %>%
ggplot(mapping = aes(x = fct_reorder(ocean_proximity, n),
y = n,
#fill = ocean_proximity,
colour  = median_house_value)) +
scale_y_log10()+
geom_col()+
theme_classic() +
labs(title = "Distribution of Houses by Distance to the Ocean",
subtitle = "Numbers in scale log10",
x = '',
y = '')+
theme(plot.title.position = "plot")+
scale_colour_continuous(labels = scales::label_comma())
cor_house <- cor(houses[,sapply(houses, is.numeric)]) %>%
kbl() %>%
kable_styling(position = "center",
bootstrap_options = "bordered",
row_label_position = "left",
latex_options = "scale_down")
cor_house
ggpairs( select(houses, -c( ocean_proximity, total_bedrooms)))
colnames(houses)
cou_data <- map_data("county", region = "california")
base1 <- ggplot(data = cou_data, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(color = "black", fill = "white") +
coord_quickmap() +
theme_void()
spat_house <-  select(houses, c(longitude, latitude, median_house_value, ocean_proximity,  housing_median_age))
base2 <-  base1 +
geom_point(alpha = 0.4, data = spat_house, mapping = aes(x = longitude,
y = latitude,
group = housing_median_age,
color = median_house_value/1000,
shape = ocean_proximity))+
labs(title = "California Housing Market",
caption = "Source: California Housing Dataset") +
theme_minimal() +
theme(plot.title.position = "plot")+
guides(color = guide_legend(title = "Median Value 1K"),
shape = guide_legend(title = "Ocean Proximity"))
base2
ggplotly(base2)
ggsave("base2.svg", plot = base2)
animation <- base2 +
transition_time(housing_median_age)+
ggtitle('Median Age: {frame_time}: ',
subtitle = 'Frame{frame} of {nframes}')
age <- max(spat_house$housing_median_age) - min(spat_house$housing_median_age) + 1
animated_map<- animate(animation, nframes = age, fps = 2)
animated_map
enc_data <- model.matrix(~ocean_proximity, data = houses)
enc_data <- as.data.frame(list(houses, enc_data)) # joins datasets.
colnames(enc_data)
enc_data <- select(enc_data, -c("ocean_proximity", "X.Intercept."))
cor(enc_data)
model_houses <- lm(median_house_value ~ ., data = enc_data)
summary(model_houses)
#stargazer(model_houses, type="html", out="lm_houses.html")
#webshot(url = "lm_houses.html")
mod_coef <- broom::tidy(model_houses, conf.int = TRUE) %>%
filter(term != "(Intercept)")
mod_coef
ggplot(data = mod_coef, mapping = aes(x = estimate,
y = fct_rev(term))) +
geom_pointrange(mapping = aes(xmin = conf.low,
xmax = conf.high),
color = "red",
size = 0.3) +
geom_vline(xintercept = 0,
color = "blue",
alpha = .5) +
theme_minimal() +
labs(title = "Linear Regression Visualization",
x="Estimate",
y ="")+
theme(plot.title.position = "plot")
par(mfrow=c(2,3))
plot(model_houses,which=1:6)
